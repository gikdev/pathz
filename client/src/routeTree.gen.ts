/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as AdminIndexRouteImport } from "./routes/admin/index"
import { Route as AppIndexRouteImport } from "./routes/_app/index"
import { Route as DevTestRouteImport } from "./routes/dev/test"
import { Route as AppCurriculumIndexRouteImport } from "./routes/_app/curriculum/index"
import { Route as AppCoursesIndexRouteImport } from "./routes/_app/courses/index"
import { Route as AppCoursesNewRouteImport } from "./routes/_app/courses/new"
import { Route as AppLessonsIdIndexRouteImport } from "./routes/_app/lessons/$id/index"
import { Route as AppCoursesIdIndexRouteImport } from "./routes/_app/courses/$id/index"
import { Route as AppLessonsIdEditRouteImport } from "./routes/_app/lessons/$id/edit"
import { Route as AppCoursesIdEditRouteImport } from "./routes/_app/courses/$id/edit"
import { Route as AppLessonsIdWriteIndexRouteImport } from "./routes/_app/lessons/$id/write/index"
import { Route as AppCoursesIdLessonsNewRouteImport } from "./routes/_app/courses/$id/lessons.new"

const AdminIndexRoute = AdminIndexRouteImport.update({
  id: "/admin/",
  path: "/admin/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: "/_app/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const DevTestRoute = DevTestRouteImport.update({
  id: "/dev/test",
  path: "/dev/test",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCurriculumIndexRoute = AppCurriculumIndexRouteImport.update({
  id: "/_app/curriculum/",
  path: "/curriculum/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCoursesIndexRoute = AppCoursesIndexRouteImport.update({
  id: "/_app/courses/",
  path: "/courses/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCoursesNewRoute = AppCoursesNewRouteImport.update({
  id: "/_app/courses/new",
  path: "/courses/new",
  getParentRoute: () => rootRouteImport,
} as any)
const AppLessonsIdIndexRoute = AppLessonsIdIndexRouteImport.update({
  id: "/_app/lessons/$id/",
  path: "/lessons/$id/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCoursesIdIndexRoute = AppCoursesIdIndexRouteImport.update({
  id: "/_app/courses/$id/",
  path: "/courses/$id/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppLessonsIdEditRoute = AppLessonsIdEditRouteImport.update({
  id: "/_app/lessons/$id/edit",
  path: "/lessons/$id/edit",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCoursesIdEditRoute = AppCoursesIdEditRouteImport.update({
  id: "/_app/courses/$id/edit",
  path: "/courses/$id/edit",
  getParentRoute: () => rootRouteImport,
} as any)
const AppLessonsIdWriteIndexRoute = AppLessonsIdWriteIndexRouteImport.update({
  id: "/_app/lessons/$id/write/",
  path: "/lessons/$id/write/",
  getParentRoute: () => rootRouteImport,
} as any)
const AppCoursesIdLessonsNewRoute = AppCoursesIdLessonsNewRouteImport.update({
  id: "/_app/courses/$id/lessons/new",
  path: "/courses/$id/lessons/new",
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  "/dev/test": typeof DevTestRoute
  "/": typeof AppIndexRoute
  "/admin": typeof AdminIndexRoute
  "/courses/new": typeof AppCoursesNewRoute
  "/courses": typeof AppCoursesIndexRoute
  "/curriculum": typeof AppCurriculumIndexRoute
  "/courses/$id/edit": typeof AppCoursesIdEditRoute
  "/lessons/$id/edit": typeof AppLessonsIdEditRoute
  "/courses/$id": typeof AppCoursesIdIndexRoute
  "/lessons/$id": typeof AppLessonsIdIndexRoute
  "/courses/$id/lessons/new": typeof AppCoursesIdLessonsNewRoute
  "/lessons/$id/write": typeof AppLessonsIdWriteIndexRoute
}
export interface FileRoutesByTo {
  "/dev/test": typeof DevTestRoute
  "/": typeof AppIndexRoute
  "/admin": typeof AdminIndexRoute
  "/courses/new": typeof AppCoursesNewRoute
  "/courses": typeof AppCoursesIndexRoute
  "/curriculum": typeof AppCurriculumIndexRoute
  "/courses/$id/edit": typeof AppCoursesIdEditRoute
  "/lessons/$id/edit": typeof AppLessonsIdEditRoute
  "/courses/$id": typeof AppCoursesIdIndexRoute
  "/lessons/$id": typeof AppLessonsIdIndexRoute
  "/courses/$id/lessons/new": typeof AppCoursesIdLessonsNewRoute
  "/lessons/$id/write": typeof AppLessonsIdWriteIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/dev/test": typeof DevTestRoute
  "/_app/": typeof AppIndexRoute
  "/admin/": typeof AdminIndexRoute
  "/_app/courses/new": typeof AppCoursesNewRoute
  "/_app/courses/": typeof AppCoursesIndexRoute
  "/_app/curriculum/": typeof AppCurriculumIndexRoute
  "/_app/courses/$id/edit": typeof AppCoursesIdEditRoute
  "/_app/lessons/$id/edit": typeof AppLessonsIdEditRoute
  "/_app/courses/$id/": typeof AppCoursesIdIndexRoute
  "/_app/lessons/$id/": typeof AppLessonsIdIndexRoute
  "/_app/courses/$id/lessons/new": typeof AppCoursesIdLessonsNewRoute
  "/_app/lessons/$id/write/": typeof AppLessonsIdWriteIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/dev/test"
    | "/"
    | "/admin"
    | "/courses/new"
    | "/courses"
    | "/curriculum"
    | "/courses/$id/edit"
    | "/lessons/$id/edit"
    | "/courses/$id"
    | "/lessons/$id"
    | "/courses/$id/lessons/new"
    | "/lessons/$id/write"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/dev/test"
    | "/"
    | "/admin"
    | "/courses/new"
    | "/courses"
    | "/curriculum"
    | "/courses/$id/edit"
    | "/lessons/$id/edit"
    | "/courses/$id"
    | "/lessons/$id"
    | "/courses/$id/lessons/new"
    | "/lessons/$id/write"
  id:
    | "__root__"
    | "/dev/test"
    | "/_app/"
    | "/admin/"
    | "/_app/courses/new"
    | "/_app/courses/"
    | "/_app/curriculum/"
    | "/_app/courses/$id/edit"
    | "/_app/lessons/$id/edit"
    | "/_app/courses/$id/"
    | "/_app/lessons/$id/"
    | "/_app/courses/$id/lessons/new"
    | "/_app/lessons/$id/write/"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DevTestRoute: typeof DevTestRoute
  AppIndexRoute: typeof AppIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AppCoursesNewRoute: typeof AppCoursesNewRoute
  AppCoursesIndexRoute: typeof AppCoursesIndexRoute
  AppCurriculumIndexRoute: typeof AppCurriculumIndexRoute
  AppCoursesIdEditRoute: typeof AppCoursesIdEditRoute
  AppLessonsIdEditRoute: typeof AppLessonsIdEditRoute
  AppCoursesIdIndexRoute: typeof AppCoursesIdIndexRoute
  AppLessonsIdIndexRoute: typeof AppLessonsIdIndexRoute
  AppCoursesIdLessonsNewRoute: typeof AppCoursesIdLessonsNewRoute
  AppLessonsIdWriteIndexRoute: typeof AppLessonsIdWriteIndexRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/admin/": {
      id: "/admin/"
      path: "/admin"
      fullPath: "/admin"
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/": {
      id: "/_app/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/dev/test": {
      id: "/dev/test"
      path: "/dev/test"
      fullPath: "/dev/test"
      preLoaderRoute: typeof DevTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/curriculum/": {
      id: "/_app/curriculum/"
      path: "/curriculum"
      fullPath: "/curriculum"
      preLoaderRoute: typeof AppCurriculumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/courses/": {
      id: "/_app/courses/"
      path: "/courses"
      fullPath: "/courses"
      preLoaderRoute: typeof AppCoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/courses/new": {
      id: "/_app/courses/new"
      path: "/courses/new"
      fullPath: "/courses/new"
      preLoaderRoute: typeof AppCoursesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/lessons/$id/": {
      id: "/_app/lessons/$id/"
      path: "/lessons/$id"
      fullPath: "/lessons/$id"
      preLoaderRoute: typeof AppLessonsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/courses/$id/": {
      id: "/_app/courses/$id/"
      path: "/courses/$id"
      fullPath: "/courses/$id"
      preLoaderRoute: typeof AppCoursesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/lessons/$id/edit": {
      id: "/_app/lessons/$id/edit"
      path: "/lessons/$id/edit"
      fullPath: "/lessons/$id/edit"
      preLoaderRoute: typeof AppLessonsIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/courses/$id/edit": {
      id: "/_app/courses/$id/edit"
      path: "/courses/$id/edit"
      fullPath: "/courses/$id/edit"
      preLoaderRoute: typeof AppCoursesIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/lessons/$id/write/": {
      id: "/_app/lessons/$id/write/"
      path: "/lessons/$id/write"
      fullPath: "/lessons/$id/write"
      preLoaderRoute: typeof AppLessonsIdWriteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_app/courses/$id/lessons/new": {
      id: "/_app/courses/$id/lessons/new"
      path: "/courses/$id/lessons/new"
      fullPath: "/courses/$id/lessons/new"
      preLoaderRoute: typeof AppCoursesIdLessonsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DevTestRoute: DevTestRoute,
  AppIndexRoute: AppIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  AppCoursesNewRoute: AppCoursesNewRoute,
  AppCoursesIndexRoute: AppCoursesIndexRoute,
  AppCurriculumIndexRoute: AppCurriculumIndexRoute,
  AppCoursesIdEditRoute: AppCoursesIdEditRoute,
  AppLessonsIdEditRoute: AppLessonsIdEditRoute,
  AppCoursesIdIndexRoute: AppCoursesIdIndexRoute,
  AppLessonsIdIndexRoute: AppLessonsIdIndexRoute,
  AppCoursesIdLessonsNewRoute: AppCoursesIdLessonsNewRoute,
  AppLessonsIdWriteIndexRoute: AppLessonsIdWriteIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
